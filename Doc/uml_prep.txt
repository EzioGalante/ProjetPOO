Classe abstraite User
<<<<<<< HEAD

	- string nickname
	- string password
	- unsigned float money

	+ User(string, string) 
	+ print()

	classes filles:
	-> Bidder
		- List<Product> personnalProducts
		
		+ print()

	-> Buyer
		- List<Product> recentProducts

		+ print()


Classe Product
	- Price currentPrice
	- Auction où elle est vendue //Dans le Auction case 1
	- Bidder owner
	- string description
	- Buyer highestPriceBuyer
	- Price current_price
	- //Price buyout_price
	- Price minimum_price

	+ Product(Bidder salesman, Auction saleContext, 
	+ void setDescription(string newDescr)
	+ string getDescription()
	+ unsigned float raisePrice(price p)
	


enum  -> type de currency (prix pour l'instant que €)

Classe Price :
	- currency 
	- value

	+ setValue(int)
	+ setCurrency(currency)
	+ convertTo(currency)


Classe Auction
	- Bidder owner
	- Liste<Buyer> buyers
	- List<Product> subject
	- Date end_of_auction
	

Classe AuctionHall
	- List<Bidder> bidders
	- List<Buyer> buyers
	- List<Auction> auctions

=======
classes filles:
	-> Bidder
	-> Buyer

Classe Product
	-> Price
	-> Auction où elle est vendue

Classe Auction
	- Bidder 
	- Liste<Buyer> buyers

enum -> type de prix (pour l'instant que €)
Classe Price :
	- currency
	- value

	+convertTo(currency)
>>>>>>> e31f4b40d48535c69dd56878f1f483ccdff69fc4
