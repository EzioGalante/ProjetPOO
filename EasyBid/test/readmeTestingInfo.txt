List of automatically run JUnit tests :

--> environment :
	
	
	--> AuctionHall :
	
		- testAuctionHall : testing constructor
		
		- testGetKnownUsers : 
			+ adds 3 users to the "knownUsers" list
			+ uses the getter to check they are all there in the right order
			
		- testGetAuctions : 
			+ adds 1 users to the "knownUsers" list
			+ adds 3 products to the "auctions" list
			+ checks that the 3 products are all in, in the right order
		
		- testAddAuction :
			+ makes valid user
			+ adds user to the "knownUsers" list
			+ adds product to the "auctions" list
			+ checks that the product was added
		
		- testAddUser :
			+ makes valid user
			+ adds user to the "knownUsers" list
			+ checks that the user was added
		
		

	--> Currency :
	
	--> Price :
	
	--> Product :
		
		- testProduct :
			+ tries and catches exceptions generated by any of the constructor's fields being null
			+ in each catch, we also assert that the object that was to be created was set to null
			
		- testGetName, testGetCurrentPrice, testGetOwner :
			+ tests on the getters, just in case
	
		- testGetHighestPriceUser :
			+ requires RaisePrice to be operational in order to have a highestPriceUser
			+ creates 2 Users and a Product
			+ raises the Price of the Product
			+ checks that the getter returned the right user (the one that raised)
			
		- testRaisePrice :
			+ creates 2 Users and a Product
			+ raises the Price of the Product with inferior Price
			+ checks the price has not changed
			+ raises the Price of the Product with superior Price
			+ checks the price was updated to the highest offer
			
		- testEquals :
			+ creates 2 instances of Product with same name
			+ checks that the equals method for Products returns true
	
	
--> users :


	--> User :

		- testUser : testing constructor
			+ tries to create invalid users (having one of their parameters to null)
			+ checks invalid users are set to null.
			
		- testGetFirstname :
			+ uses firstname getter to get global user's first name
			+ checks it is equal to the value we first entered
			
		- testGetLastname :
			+ uses lasttname getter to get global user's last name
			+ checks it is equal to the value we first entered
			
